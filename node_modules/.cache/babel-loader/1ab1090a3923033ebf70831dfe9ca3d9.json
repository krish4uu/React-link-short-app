{"ast":null,"code":"var _jsxFileName = \"/Users/krish/Desktop/BIO-interview/bio-front-end/src/url-context.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport * as React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UrlContext = /*#__PURE__*/React.createContext();\nconst INITIAL_STAGE = JSON.parse(localStorage.getItem(\"urls\")) || [];\n\nfunction UrlReducer(state, action) {\n  switch (action.type) {\n    case \"short_url\":\n      {\n        console.log(\"from context\");\n        return { ...state,\n          urls: state.urls.concat([action.url])\n        };\n      }\n\n    default:\n      {\n        throw new Error(`Unhandled action type: ${action.type}`);\n      }\n  }\n}\n\n_c = UrlReducer;\n\nfunction UrlProvider(_ref) {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [state, dispatch] = React.useReducer(UrlReducer, {\n    urls: INITIAL_STAGE\n  });\n  React.useEffect(() => {\n    localStorage.setItem(\"urls\", JSON.stringify(state.urls));\n  }, [state]);\n  const value = {\n    state,\n    dispatch\n  };\n  return /*#__PURE__*/_jsxDEV(UrlContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 10\n  }, this);\n}\n\n_s(UrlProvider, \"gtC5/oDrL/Swn66Vf7Xzgi5oqcg=\");\n\n_c2 = UrlProvider;\n\nfunction useUrls() {\n  _s2();\n\n  const context = React.useContext(UrlContext);\n\n  if (context === undefined) {\n    throw new Error(\"useCount must be used within a CountProvider\");\n  }\n\n  return context;\n}\n\n_s2(useUrls, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n\nexport { UrlProvider, useUrls };\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"UrlReducer\");\n$RefreshReg$(_c2, \"UrlProvider\");","map":{"version":3,"sources":["/Users/krish/Desktop/BIO-interview/bio-front-end/src/url-context.js"],"names":["React","UrlContext","createContext","INITIAL_STAGE","JSON","parse","localStorage","getItem","UrlReducer","state","action","type","console","log","urls","concat","url","Error","UrlProvider","children","dispatch","useReducer","useEffect","setItem","stringify","value","useUrls","context","useContext","undefined"],"mappings":";;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;AAEA,MAAMC,UAAU,gBAAGD,KAAK,CAACE,aAAN,EAAnB;AAEA,MAAMC,aAAa,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,KAA4C,EAAlE;;AAEA,SAASC,UAAT,CAAoBC,KAApB,EAA2BC,MAA3B,EAAmC;AACjC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,WAAL;AAAkB;AAChBC,QAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACA,eAAO,EACL,GAAGJ,KADE;AAELK,UAAAA,IAAI,EAAEL,KAAK,CAACK,IAAN,CAAWC,MAAX,CAAkB,CAACL,MAAM,CAACM,GAAR,CAAlB;AAFD,SAAP;AAID;;AACD;AAAS;AACP,cAAM,IAAIC,KAAJ,CAAW,0BAAyBP,MAAM,CAACC,IAAK,EAAhD,CAAN;AACD;AAVH;AAYD;;KAbQH,U;;AAeT,SAASU,WAAT,OAAmC;AAAA;;AAAA,MAAd;AAAEC,IAAAA;AAAF,GAAc;AACjC,QAAM,CAACV,KAAD,EAAQW,QAAR,IAAoBpB,KAAK,CAACqB,UAAN,CAAiBb,UAAjB,EAA6B;AACrDM,IAAAA,IAAI,EAAEX;AAD+C,GAA7B,CAA1B;AAGAH,EAAAA,KAAK,CAACsB,SAAN,CAAgB,MAAM;AACpBhB,IAAAA,YAAY,CAACiB,OAAb,CAAqB,MAArB,EAA6BnB,IAAI,CAACoB,SAAL,CAAef,KAAK,CAACK,IAArB,CAA7B;AACD,GAFD,EAEG,CAACL,KAAD,CAFH;AAIA,QAAMgB,KAAK,GAAG;AAAEhB,IAAAA,KAAF;AAASW,IAAAA;AAAT,GAAd;AACA,sBAAO,QAAC,UAAD,CAAY,QAAZ;AAAqB,IAAA,KAAK,EAAEK,KAA5B;AAAA,cAAoCN;AAApC;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;GAVQD,W;;MAAAA,W;;AAYT,SAASQ,OAAT,GAAmB;AAAA;;AACjB,QAAMC,OAAO,GAAG3B,KAAK,CAAC4B,UAAN,CAAiB3B,UAAjB,CAAhB;;AACA,MAAI0B,OAAO,KAAKE,SAAhB,EAA2B;AACzB,UAAM,IAAIZ,KAAJ,CAAU,8CAAV,CAAN;AACD;;AACD,SAAOU,OAAP;AACD;;IANQD,O;;AAQT,SAASR,WAAT,EAAsBQ,OAAtB","sourcesContent":["import * as React from \"react\";\n\nconst UrlContext = React.createContext();\n\nconst INITIAL_STAGE = JSON.parse(localStorage.getItem(\"urls\")) || [];\n\nfunction UrlReducer(state, action) {\n  switch (action.type) {\n    case \"short_url\": {\n      console.log(\"from context\");\n      return {\n        ...state,\n        urls: state.urls.concat([action.url]),\n      };\n    }\n    default: {\n      throw new Error(`Unhandled action type: ${action.type}`);\n    }\n  }\n}\n\nfunction UrlProvider({ children }) {\n  const [state, dispatch] = React.useReducer(UrlReducer, {\n    urls: INITIAL_STAGE,\n  });\n  React.useEffect(() => {\n    localStorage.setItem(\"urls\", JSON.stringify(state.urls));\n  }, [state]);\n\n  const value = { state, dispatch };\n  return <UrlContext.Provider value={value}>{children}</UrlContext.Provider>;\n}\n\nfunction useUrls() {\n  const context = React.useContext(UrlContext);\n  if (context === undefined) {\n    throw new Error(\"useCount must be used within a CountProvider\");\n  }\n  return context;\n}\n\nexport { UrlProvider, useUrls };\n"]},"metadata":{},"sourceType":"module"}