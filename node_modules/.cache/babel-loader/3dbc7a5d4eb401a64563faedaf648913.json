{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"/Users/krish/Desktop/react-link-short-app/node_modules/@babel/runtime/regenerator/index.js\");\n\nvar _asyncToGenerator = require(\"/Users/krish/Desktop/react-link-short-app/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\n\nvar _classCallCheck = require(\"/Users/krish/Desktop/react-link-short-app/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\n\nvar _createClass = require(\"/Users/krish/Desktop/react-link-short-app/node_modules/@babel/runtime/helpers/createClass.js\").default;\n\nvar __classPrivateFieldSet = this && this.__classPrivateFieldSet || function (receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value), value;\n};\n\nvar __classPrivateFieldGet = this && this.__classPrivateFieldGet || function (receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\n\nvar _ImageDrawer_images;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ImageDrawer = void 0;\n\nvar Utils_1 = require(\"./Utils\");\n\nvar ImageDrawer = /*#__PURE__*/function () {\n  function ImageDrawer() {\n    _classCallCheck(this, ImageDrawer);\n\n    _ImageDrawer_images.set(this, void 0);\n\n    __classPrivateFieldSet(this, _ImageDrawer_images, [], \"f\");\n  }\n\n  _createClass(ImageDrawer, [{\n    key: \"getSidesCount\",\n    value: function getSidesCount() {\n      return 12;\n    }\n  }, {\n    key: \"getImages\",\n    value: function getImages(container) {\n      var containerImages = __classPrivateFieldGet(this, _ImageDrawer_images, \"f\").find(function (t) {\n        return t.id === container.id;\n      });\n\n      if (!containerImages) {\n        __classPrivateFieldGet(this, _ImageDrawer_images, \"f\").push({\n          id: container.id,\n          images: []\n        });\n\n        return this.getImages(container);\n      } else {\n        return containerImages;\n      }\n    }\n  }, {\n    key: \"addImage\",\n    value: function addImage(container, image) {\n      var containerImages = this.getImages(container);\n      containerImages === null || containerImages === void 0 ? void 0 : containerImages.images.push(image);\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      __classPrivateFieldSet(this, _ImageDrawer_images, [], \"f\");\n    }\n  }, {\n    key: \"loadImageShape\",\n    value: function () {\n      var _loadImageShape = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(container, imageShape) {\n        var source, image, imageFunc;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                source = imageShape.src;\n\n                if (source) {\n                  _context.next = 3;\n                  break;\n                }\n\n                throw new Error(\"Error tsParticles - No image.src\");\n\n              case 3:\n                _context.prev = 3;\n                image = {\n                  source: source,\n                  type: source.substr(source.length - 3),\n                  error: false,\n                  loading: true\n                };\n                this.addImage(container, image);\n                imageFunc = imageShape.replaceColor ? Utils_1.downloadSvgImage : Utils_1.loadImage;\n                _context.next = 9;\n                return imageFunc(image);\n\n              case 9:\n                _context.next = 14;\n                break;\n\n              case 11:\n                _context.prev = 11;\n                _context.t0 = _context[\"catch\"](3);\n                throw new Error(\"tsParticles error - \".concat(imageShape.src, \" not found\"));\n\n              case 14:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[3, 11]]);\n      }));\n\n      function loadImageShape(_x, _x2) {\n        return _loadImageShape.apply(this, arguments);\n      }\n\n      return loadImageShape;\n    }()\n  }, {\n    key: \"draw\",\n    value: function draw(context, particle, radius, opacity) {\n      var _a, _b;\n\n      var image = particle.image;\n      var element = (_a = image === null || image === void 0 ? void 0 : image.data) === null || _a === void 0 ? void 0 : _a.element;\n\n      if (!element) {\n        return;\n      }\n\n      var ratio = (_b = image === null || image === void 0 ? void 0 : image.ratio) !== null && _b !== void 0 ? _b : 1;\n      var pos = {\n        x: -radius,\n        y: -radius\n      };\n\n      if (!(image === null || image === void 0 ? void 0 : image.data.svgData) || !(image === null || image === void 0 ? void 0 : image.replaceColor)) {\n        context.globalAlpha = opacity;\n      }\n\n      context.drawImage(element, pos.x, pos.y, radius * 2, radius * 2 / ratio);\n\n      if (!(image === null || image === void 0 ? void 0 : image.data.svgData) || !(image === null || image === void 0 ? void 0 : image.replaceColor)) {\n        context.globalAlpha = 1;\n      }\n    }\n  }, {\n    key: \"loadShape\",\n    value: function loadShape(particle) {\n      var _this = this;\n\n      var _a, _b, _c;\n\n      if (particle.shape !== \"image\" && particle.shape !== \"images\") {\n        return;\n      }\n\n      var images = this.getImages(particle.container).images;\n      var imageData = particle.shapeData;\n      var image = images.find(function (t) {\n        return t.source === imageData.src;\n      });\n      var imageRes;\n\n      if (!image) {\n        this.loadImageShape(particle.container, imageData).then(function () {\n          _this.loadShape(particle);\n        });\n        return;\n      }\n\n      if (image.error) {\n        return;\n      }\n\n      var color = particle.getFillColor();\n\n      if (image.svgData && imageData.replaceColor && color) {\n        imageRes = (0, Utils_1.replaceImageColor)(image, imageData, color, particle);\n      } else {\n        imageRes = {\n          data: image,\n          loaded: true,\n          ratio: imageData.width / imageData.height,\n          replaceColor: (_a = imageData.replaceColor) !== null && _a !== void 0 ? _a : imageData.replace_color,\n          source: imageData.src\n        };\n      }\n\n      if (!imageRes.ratio) {\n        imageRes.ratio = 1;\n      }\n\n      var fill = (_b = imageData.fill) !== null && _b !== void 0 ? _b : particle.fill;\n      var close = (_c = imageData.close) !== null && _c !== void 0 ? _c : particle.close;\n      var imageShape = {\n        image: imageRes,\n        fill: fill,\n        close: close\n      };\n      particle.image = imageShape.image;\n      particle.fill = imageShape.fill;\n      particle.close = imageShape.close;\n    }\n  }]);\n\n  return ImageDrawer;\n}();\n\nexports.ImageDrawer = ImageDrawer;\n_ImageDrawer_images = new WeakMap();","map":{"version":3,"sources":["/Users/krish/Desktop/react-link-short-app/node_modules/tsparticles/Shapes/Image/ImageDrawer.js"],"names":["__classPrivateFieldSet","receiver","state","value","kind","f","TypeError","has","call","set","__classPrivateFieldGet","get","_ImageDrawer_images","Object","defineProperty","exports","ImageDrawer","Utils_1","require","container","containerImages","find","t","id","push","images","getImages","image","imageShape","source","src","Error","type","substr","length","error","loading","addImage","imageFunc","replaceColor","downloadSvgImage","loadImage","context","particle","radius","opacity","_a","_b","element","data","ratio","pos","x","y","svgData","globalAlpha","drawImage","_c","shape","imageData","shapeData","imageRes","loadImageShape","then","loadShape","color","getFillColor","replaceImageColor","loaded","width","height","replace_color","fill","close","WeakMap"],"mappings":"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","sourcesContent":["\"use strict\";\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _ImageDrawer_images;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ImageDrawer = void 0;\nconst Utils_1 = require(\"./Utils\");\nclass ImageDrawer {\n    constructor() {\n        _ImageDrawer_images.set(this, void 0);\n        __classPrivateFieldSet(this, _ImageDrawer_images, [], \"f\");\n    }\n    getSidesCount() {\n        return 12;\n    }\n    getImages(container) {\n        const containerImages = __classPrivateFieldGet(this, _ImageDrawer_images, \"f\").find((t) => t.id === container.id);\n        if (!containerImages) {\n            __classPrivateFieldGet(this, _ImageDrawer_images, \"f\").push({\n                id: container.id,\n                images: [],\n            });\n            return this.getImages(container);\n        }\n        else {\n            return containerImages;\n        }\n    }\n    addImage(container, image) {\n        const containerImages = this.getImages(container);\n        containerImages === null || containerImages === void 0 ? void 0 : containerImages.images.push(image);\n    }\n    destroy() {\n        __classPrivateFieldSet(this, _ImageDrawer_images, [], \"f\");\n    }\n    async loadImageShape(container, imageShape) {\n        const source = imageShape.src;\n        if (!source) {\n            throw new Error(\"Error tsParticles - No image.src\");\n        }\n        try {\n            const image = {\n                source: source,\n                type: source.substr(source.length - 3),\n                error: false,\n                loading: true,\n            };\n            this.addImage(container, image);\n            const imageFunc = imageShape.replaceColor ? Utils_1.downloadSvgImage : Utils_1.loadImage;\n            await imageFunc(image);\n        }\n        catch (_a) {\n            throw new Error(`tsParticles error - ${imageShape.src} not found`);\n        }\n    }\n    draw(context, particle, radius, opacity) {\n        var _a, _b;\n        const image = particle.image;\n        const element = (_a = image === null || image === void 0 ? void 0 : image.data) === null || _a === void 0 ? void 0 : _a.element;\n        if (!element) {\n            return;\n        }\n        const ratio = (_b = image === null || image === void 0 ? void 0 : image.ratio) !== null && _b !== void 0 ? _b : 1;\n        const pos = {\n            x: -radius,\n            y: -radius,\n        };\n        if (!(image === null || image === void 0 ? void 0 : image.data.svgData) || !(image === null || image === void 0 ? void 0 : image.replaceColor)) {\n            context.globalAlpha = opacity;\n        }\n        context.drawImage(element, pos.x, pos.y, radius * 2, (radius * 2) / ratio);\n        if (!(image === null || image === void 0 ? void 0 : image.data.svgData) || !(image === null || image === void 0 ? void 0 : image.replaceColor)) {\n            context.globalAlpha = 1;\n        }\n    }\n    loadShape(particle) {\n        var _a, _b, _c;\n        if (particle.shape !== \"image\" && particle.shape !== \"images\") {\n            return;\n        }\n        const images = this.getImages(particle.container).images;\n        const imageData = particle.shapeData;\n        const image = images.find((t) => t.source === imageData.src);\n        let imageRes;\n        if (!image) {\n            this.loadImageShape(particle.container, imageData).then(() => {\n                this.loadShape(particle);\n            });\n            return;\n        }\n        if (image.error) {\n            return;\n        }\n        const color = particle.getFillColor();\n        if (image.svgData && imageData.replaceColor && color) {\n            imageRes = (0, Utils_1.replaceImageColor)(image, imageData, color, particle);\n        }\n        else {\n            imageRes = {\n                data: image,\n                loaded: true,\n                ratio: imageData.width / imageData.height,\n                replaceColor: (_a = imageData.replaceColor) !== null && _a !== void 0 ? _a : imageData.replace_color,\n                source: imageData.src,\n            };\n        }\n        if (!imageRes.ratio) {\n            imageRes.ratio = 1;\n        }\n        const fill = (_b = imageData.fill) !== null && _b !== void 0 ? _b : particle.fill;\n        const close = (_c = imageData.close) !== null && _c !== void 0 ? _c : particle.close;\n        const imageShape = {\n            image: imageRes,\n            fill,\n            close,\n        };\n        particle.image = imageShape.image;\n        particle.fill = imageShape.fill;\n        particle.close = imageShape.close;\n    }\n}\nexports.ImageDrawer = ImageDrawer;\n_ImageDrawer_images = new WeakMap();\n"]},"metadata":{},"sourceType":"script"}