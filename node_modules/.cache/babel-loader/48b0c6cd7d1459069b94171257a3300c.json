{"ast":null,"code":"var _jsxFileName = \"/Users/krish/Desktop/BIO-interview/bio-front-end/src/Form.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = \"https://api.shrtco.de/v2/shorten\";\nexport default function Form(props) {\n  _s();\n\n  const [url, setUrl] = useState(\"\");\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    fetch($).then(res => res.json()).then(result => {\n      this.setState({\n        isLoaded: true,\n        items: result.items\n      });\n    }, // Note: it's important to handle errors here\n    // instead of a catch() block so that we don't swallow\n    // exceptions from actual bugs in components.\n    error => {\n      this.setState({\n        isLoaded: true,\n        error\n      });\n    });\n    alert(`Submitting Name ${url}`);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: url,\n        onChange: e => setUrl(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"submit\",\n      value: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Form, \"tyJwPUNTvQ8RPvFiUPpH5FS/SJw=\");\n\n_c = Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["/Users/krish/Desktop/BIO-interview/bio-front-end/src/Form.js"],"names":["React","useState","API_URL","Form","props","url","setUrl","handleSubmit","evt","preventDefault","fetch","$","then","res","json","result","setState","isLoaded","items","error","alert","e","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,MAAMC,OAAO,GAAG,kCAAhB;AAEA,eAAe,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAAA;;AAClC,QAAM,CAACC,GAAD,EAAMC,MAAN,IAAgBL,QAAQ,CAAC,EAAD,CAA9B;;AAEA,QAAMM,YAAY,GAAIC,GAAD,IAAS;AAC5BA,IAAAA,GAAG,CAACC,cAAJ;AAEAC,IAAAA,KAAK,CAACC,CAAD,CAAL,CACGC,IADH,CACQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADf,EAEGF,IAFH,CAGKG,MAAD,IAAY;AACV,WAAKC,QAAL,CAAc;AACZC,QAAAA,QAAQ,EAAE,IADE;AAEZC,QAAAA,KAAK,EAAEH,MAAM,CAACG;AAFF,OAAd;AAID,KARL,EASI;AACA;AACA;AACCC,IAAAA,KAAD,IAAW;AACT,WAAKH,QAAL,CAAc;AACZC,QAAAA,QAAQ,EAAE,IADE;AAEZE,QAAAA;AAFY,OAAd;AAID,KAjBL;AAmBAC,IAAAA,KAAK,CAAE,mBAAkBf,GAAI,EAAxB,CAAL;AACD,GAvBD;;AAyBA,sBACE;AAAM,IAAA,QAAQ,EAAEE,YAAhB;AAAA,4BACE;AAAA,6BACE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,KAAK,EAAEF,GAFT;AAGE,QAAA,QAAQ,EAAGgB,CAAD,IAAOf,MAAM,CAACe,CAAC,CAACC,MAAF,CAASC,KAAV;AAHzB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAQE;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,KAAK,EAAC;AAA3B;AAAA;AAAA;AAAA;AAAA,YARF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD;;GAxCuBpB,I;;KAAAA,I","sourcesContent":["import React, { useState } from \"react\";\n\nconst API_URL = \"https://api.shrtco.de/v2/shorten\";\n\nexport default function Form(props) {\n  const [url, setUrl] = useState(\"\");\n\n  const handleSubmit = (evt) => {\n    evt.preventDefault();\n    \n    fetch($)\n      .then(res => res.json())\n      .then(\n        (result) => {\n          this.setState({\n            isLoaded: true,\n            items: result.items\n          });\n        },\n        // Note: it's important to handle errors here\n        // instead of a catch() block so that we don't swallow\n        // exceptions from actual bugs in components.\n        (error) => {\n          this.setState({\n            isLoaded: true,\n            error\n          });\n        }\n      )\n    alert(`Submitting Name ${url}`);\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <label>\n        <input\n          type=\"text\"\n          value={url}\n          onChange={(e) => setUrl(e.target.value)}\n        />\n      </label>\n      <input type=\"submit\" value=\"Submit\" />\n    </form>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}