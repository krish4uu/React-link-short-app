{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/Users/krish/Desktop/Interview/bio-front-end/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\n\nvar _createClass = require(\"/Users/krish/Desktop/Interview/bio-front-end/node_modules/@babel/runtime/helpers/createClass.js\").default;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.RollUpdater = void 0;\n\nvar Utils_1 = require(\"../../Utils\");\n\nfunction updateRoll(particle, delta) {\n  var roll = particle.options.roll;\n\n  if (!particle.roll || !roll.enable) {\n    return;\n  }\n\n  var speed = particle.roll.speed * delta.factor;\n  var max = 2 * Math.PI;\n  particle.roll.angle += speed;\n\n  if (particle.roll.angle > max) {\n    particle.roll.angle -= max;\n  }\n}\n\nvar RollUpdater = /*#__PURE__*/function () {\n  function RollUpdater() {\n    _classCallCheck(this, RollUpdater);\n  }\n\n  _createClass(RollUpdater, [{\n    key: \"init\",\n    value: function init(particle) {\n      var rollOpt = particle.options.roll;\n\n      if (rollOpt.enable) {\n        particle.roll = {\n          angle: Math.random() * Math.PI * 2,\n          speed: (0, Utils_1.getRangeValue)(rollOpt.speed) / 360\n        };\n\n        if (rollOpt.backColor) {\n          particle.backColor = (0, Utils_1.colorToHsl)(rollOpt.backColor);\n        } else if (rollOpt.darken.enable && rollOpt.enlighten.enable) {\n          var alterType = Math.random() >= 0.5 ? \"darken\" : \"enlighten\";\n          particle.roll.alter = {\n            type: alterType,\n            value: alterType === \"darken\" ? rollOpt.darken.value : rollOpt.enlighten.value\n          };\n        } else if (rollOpt.darken.enable) {\n          particle.roll.alter = {\n            type: \"darken\",\n            value: rollOpt.darken.value\n          };\n        } else if (rollOpt.enlighten.enable) {\n          particle.roll.alter = {\n            type: \"enlighten\",\n            value: rollOpt.enlighten.value\n          };\n        }\n      } else {\n        particle.roll = {\n          angle: 0,\n          speed: 0\n        };\n      }\n    }\n  }, {\n    key: \"isEnabled\",\n    value: function isEnabled(particle) {\n      var roll = particle.options.roll;\n      return !particle.destroyed && !particle.spawning && roll.enable;\n    }\n  }, {\n    key: \"update\",\n    value: function update(particle, delta) {\n      if (!this.isEnabled(particle)) {\n        return;\n      }\n\n      updateRoll(particle, delta);\n    }\n  }]);\n\n  return RollUpdater;\n}();\n\nexports.RollUpdater = RollUpdater;","map":{"version":3,"sources":["/Users/krish/Desktop/Interview/bio-front-end/node_modules/tsparticles/Updaters/Roll/RollUpdater.js"],"names":["Object","defineProperty","exports","value","RollUpdater","Utils_1","require","updateRoll","particle","delta","roll","options","enable","speed","factor","max","Math","PI","angle","rollOpt","random","getRangeValue","backColor","colorToHsl","darken","enlighten","alterType","alter","type","destroyed","spawning","isEnabled"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RollUpdater = void 0;\nconst Utils_1 = require(\"../../Utils\");\nfunction updateRoll(particle, delta) {\n    const roll = particle.options.roll;\n    if (!particle.roll || !roll.enable) {\n        return;\n    }\n    const speed = particle.roll.speed * delta.factor;\n    const max = 2 * Math.PI;\n    particle.roll.angle += speed;\n    if (particle.roll.angle > max) {\n        particle.roll.angle -= max;\n    }\n}\nclass RollUpdater {\n    init(particle) {\n        const rollOpt = particle.options.roll;\n        if (rollOpt.enable) {\n            particle.roll = {\n                angle: Math.random() * Math.PI * 2,\n                speed: (0, Utils_1.getRangeValue)(rollOpt.speed) / 360,\n            };\n            if (rollOpt.backColor) {\n                particle.backColor = (0, Utils_1.colorToHsl)(rollOpt.backColor);\n            }\n            else if (rollOpt.darken.enable && rollOpt.enlighten.enable) {\n                const alterType = Math.random() >= 0.5 ? \"darken\" : \"enlighten\";\n                particle.roll.alter = {\n                    type: alterType,\n                    value: alterType === \"darken\" ? rollOpt.darken.value : rollOpt.enlighten.value,\n                };\n            }\n            else if (rollOpt.darken.enable) {\n                particle.roll.alter = {\n                    type: \"darken\",\n                    value: rollOpt.darken.value,\n                };\n            }\n            else if (rollOpt.enlighten.enable) {\n                particle.roll.alter = {\n                    type: \"enlighten\",\n                    value: rollOpt.enlighten.value,\n                };\n            }\n        }\n        else {\n            particle.roll = { angle: 0, speed: 0 };\n        }\n    }\n    isEnabled(particle) {\n        const roll = particle.options.roll;\n        return !particle.destroyed && !particle.spawning && roll.enable;\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        updateRoll(particle, delta);\n    }\n}\nexports.RollUpdater = RollUpdater;\n"]},"metadata":{},"sourceType":"script"}