{"ast":null,"code":"var _jsxFileName = \"/Users/krish/Desktop/BIO-interview/bio-front-end/src/Form.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useUrls } from \"./url-context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = \"https://api.shrtco.de/v2/shorten\";\nconst URL_REGEX = /(http(s)?:\\/\\/.)?(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{2,256}\\.[a-z]{2,6}\\b([-a-zA-Z0-9@:%_\\+.~#?&//=]*)/g;\nexport default function Form(props) {\n  _s();\n\n  const [url, setUrl] = useState(\"\");\n  const {\n    dispatch,\n    state\n  } = useUrls();\n  const urls = state.urls;\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n\n    if (isUrlValid(url)) {} else {\n      setError(\"Url is not valid. Please enter correct url.\");\n    }\n  };\n\n  const isUrlValid = url => {\n    return URL_REGEX.test(url);\n  };\n\n  const fetchShortUrl = url => {\n    return URL_REGEX.test(url);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: url,\n        onChange: e => setUrl(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"submit\",\n      value: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), state.urls.length > 0 && urls.map((url, index) => {\n      return /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: url\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 18\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Form, \"D70eQc6K3Xf1M/afeSXybeSrNDc=\", false, function () {\n  return [useUrls];\n});\n\n_c = Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["/Users/krish/Desktop/BIO-interview/bio-front-end/src/Form.js"],"names":["React","useState","useUrls","API_URL","URL_REGEX","Form","props","url","setUrl","dispatch","state","urls","handleSubmit","evt","preventDefault","isUrlValid","setError","test","fetchShortUrl","e","target","value","length","map","index"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,OAAT,QAAwB,eAAxB;;AACA,MAAMC,OAAO,GAAG,kCAAhB;AACA,MAAMC,SAAS,GAAG,oGAAlB;AAEA,eAAe,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAAA;;AAElC,QAAM,CAACC,GAAD,EAAMC,MAAN,IAAgBP,QAAQ,CAAC,EAAD,CAA9B;AACA,QAAM;AAAEQ,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAAsBR,OAAO,EAAnC;AACA,QAAMS,IAAI,GAAGD,KAAK,CAACC,IAAnB;;AAGA,QAAMC,YAAY,GAAIC,GAAD,IAAS;AAC5BA,IAAAA,GAAG,CAACC,cAAJ;;AAEA,QAAIC,UAAU,CAACR,GAAD,CAAd,EAAqB,CAEpB,CAFD,MAEO;AAGLS,MAAAA,QAAQ,CAAC,6CAAD,CAAR;AACD;AACF,GAVD;;AAYA,QAAMD,UAAU,GAAIR,GAAD,IAAS;AAC1B,WAAOH,SAAS,CAACa,IAAV,CAAeV,GAAf,CAAP;AACD,GAFD;;AAIA,QAAMW,aAAa,GAAIX,GAAD,IAAS;AAC7B,WAAOH,SAAS,CAACa,IAAV,CAAeV,GAAf,CAAP;AACD,GAFD;;AAIA,sBACE;AAAM,IAAA,QAAQ,EAAEK,YAAhB;AAAA,4BACE;AAAA,6BACE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,KAAK,EAAEL,GAFT;AAGE,QAAA,QAAQ,EAAGY,CAAD,IAAOX,MAAM,CAACW,CAAC,CAACC,MAAF,CAASC,KAAV;AAHzB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAQE;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,KAAK,EAAC;AAA3B;AAAA;AAAA;AAAA;AAAA,YARF,EAUGX,KAAK,CAACC,IAAN,CAAWW,MAAX,GAAoB,CAApB,IACCX,IAAI,CAACY,GAAL,CAAS,CAAChB,GAAD,EAAMiB,KAAN,KAAgB;AACvB,0BAAO;AAAA,kBAAiBjB;AAAjB,SAASiB,KAAT;AAAA;AAAA;AAAA;AAAA,cAAP;AACD,KAFD,CAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD;;GA5CuBnB,I;UAGMH,O;;;KAHNG,I","sourcesContent":["import React, { useState } from \"react\";\nimport { useUrls } from \"./url-context\";\nconst API_URL = \"https://api.shrtco.de/v2/shorten\";\nconst URL_REGEX = /(http(s)?:\\/\\/.)?(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{2,256}\\.[a-z]{2,6}\\b([-a-zA-Z0-9@:%_\\+.~#?&//=]*)/g;\n\nexport default function Form(props) {\n\n  const [url, setUrl] = useState(\"\");\n  const { dispatch, state } = useUrls();\n  const urls = state.urls;\n\n\n  const handleSubmit = (evt) => {\n    evt.preventDefault();\n\n    if (isUrlValid(url)) {\n      \n    } else {\n\n\n      setError(\"Url is not valid. Please enter correct url.\");\n    }\n  };\n\n  const isUrlValid = (url) => {\n    return URL_REGEX.test(url);\n  }\n\n  const fetchShortUrl = (url) => {\n    return URL_REGEX.test(url);\n  }\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <label>\n        <input\n          type=\"text\"\n          value={url}\n          onChange={(e) => setUrl(e.target.value)}\n        />\n      </label>\n      <input type=\"submit\" value=\"Submit\" />\n\n      {state.urls.length > 0 &&\n        urls.map((url, index) => {\n          return <h3 key={index}>{url}</h3>;\n        })}\n    </form>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}